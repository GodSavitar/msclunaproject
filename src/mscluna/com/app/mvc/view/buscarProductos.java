/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mscluna.com.app.mvc.view;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.*;
import javax.swing.*;
import mscluna.com.app.mvc.model.Producto;
import mscluna.com.app.mvc.model.ProductoGranel;
import mscluna.com.app.mvc.controller.OperacionesBD;
/**
 *
 * @author luiis
 */
public class buscarProductos extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(buscarProductos.class.getName());
    private OperacionesBD operacionesBD;
    private lobby parentLobby; // El JFrame que contiene la tablaVentas

    // Guarda los productos encontrados para f√°cil acceso al seleccionar en el ComboBox
    private List<Producto> resultadosNormales = new ArrayList<>();
    private List<ProductoGranel> resultadosGranel = new ArrayList<>();

    /**
     * Creates new form buscarProductos
     */
    public buscarProductos(lobby parentLobby, OperacionesBD operacionesBD) {
        this.parentLobby = parentLobby;
        this.operacionesBD = operacionesBD;
        initComponents();
        setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buscarProductoLabelVenta = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        nombre = new javax.swing.JPanel();
        nombreProducto1 = new javax.swing.JLabel();
        buscarNombre = new javax.swing.JTextField();
        buscarButton = new javax.swing.JButton();
        mostrarOpcionesNormal = new javax.swing.JComboBox<>();
        enviarOpcionVentas = new javax.swing.JButton();
        cantidadIng = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        granel = new javax.swing.JPanel();
        nombreProducto2 = new javax.swing.JLabel();
        buscarNombre2 = new javax.swing.JTextField();
        buscarButton2 = new javax.swing.JButton();
        mostrarOpcionesGranel = new javax.swing.JComboBox<>();
        enviarOpcionVentas2 = new javax.swing.JButton();
        cantidadEnKg = new javax.swing.JFormattedTextField();
        cantidadEnPesos = new javax.swing.JFormattedTextField();
        explic1 = new javax.swing.JLabel();
        explic2 = new javax.swing.JLabel();
        adv1 = new javax.swing.JLabel();
        adv2 = new javax.swing.JLabel();
        calcularGramosPesos = new javax.swing.JButton();
        mostrarPesos = new javax.swing.JLabel();
        mostrarKg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        buscarProductoLabelVenta.setBackground(new java.awt.Color(0, 205, 203));
        buscarProductoLabelVenta.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buscarProductoLabelVenta.setForeground(new java.awt.Color(255, 255, 255));
        buscarProductoLabelVenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buscarProductoLabelVenta.setText("Buscar Producto");
        buscarProductoLabelVenta.setOpaque(true);

        nombre.setBackground(new java.awt.Color(255, 255, 255));
        nombre.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nombreProducto1.setForeground(new java.awt.Color(0, 0, 0));
        nombreProducto1.setText("Ingresa el nombre del producto:");
        nombre.add(nombreProducto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 31, -1, -1));
        nombre.add(buscarNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 26, 323, 30));
        buscarNombre.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                buscarButton.doClick();
            }
        });

        buscarButton.setBackground(new java.awt.Color(65, 220, 127));
        buscarButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buscarButton.setForeground(new java.awt.Color(255, 255, 255));
        buscarButton.setText("Buscar");
        buscarButton.setFocusPainted(false);
        buscarButton.setFocusable(false);
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });
        nombre.add(buscarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 27, -1, 26));

        nombre.add(mostrarOpcionesNormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 65, 323, 30));

        enviarOpcionVentas.setBackground(new java.awt.Color(65, 220, 127));
        enviarOpcionVentas.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enviarOpcionVentas.setForeground(new java.awt.Color(255, 255, 255));
        enviarOpcionVentas.setText("Enviar");
        enviarOpcionVentas.setFocusPainted(false);
        enviarOpcionVentas.setFocusable(false);
        enviarOpcionVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarOpcionVentasActionPerformed(evt);
            }
        });
        nombre.add(enviarOpcionVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 65, -1, -1));
        nombre.add(cantidadIng, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 66, 70, 30));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cantidad:");
        nombre.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, 20));

        jTabbedPane1.addTab("Nombre", nombre);

        granel.setBackground(new java.awt.Color(255, 255, 255));
        granel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nombreProducto2.setForeground(new java.awt.Color(0, 0, 0));
        nombreProducto2.setText("Ingresa el nombre del producto:");
        granel.add(nombreProducto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, 40));
        granel.add(buscarNombre2, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 26, 323, 30));
        buscarNombre2.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                buscarButton2.doClick();
            }
        });

        buscarButton2.setBackground(new java.awt.Color(65, 220, 127));
        buscarButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buscarButton2.setForeground(new java.awt.Color(255, 255, 255));
        buscarButton2.setText("Buscar");
        buscarButton2.setFocusPainted(false);
        buscarButton2.setFocusable(false);
        buscarButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButton2ActionPerformed(evt);
            }
        });
        granel.add(buscarButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(567, 26, -1, -1));

        granel.add(mostrarOpcionesGranel, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 65, 323, -1));

        enviarOpcionVentas2.setBackground(new java.awt.Color(65, 220, 127));
        enviarOpcionVentas2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enviarOpcionVentas2.setForeground(new java.awt.Color(255, 255, 255));
        enviarOpcionVentas2.setText("Enviar");
        enviarOpcionVentas2.setFocusPainted(false);
        enviarOpcionVentas2.setFocusable(false);
        enviarOpcionVentas2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarOpcionVentas2ActionPerformed(evt);
            }
        });
        granel.add(enviarOpcionVentas2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 160, -1, -1));
        granel.add(cantidadEnKg, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 110, 30));
        granel.add(cantidadEnPesos, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 110, 30));

        explic1.setForeground(new java.awt.Color(0, 0, 0));
        explic1.setText("Cantidad en kg requerida:");
        granel.add(explic1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, 20));

        explic2.setForeground(new java.awt.Color(0, 0, 0));
        explic2.setText("Cantidad en pesos requerida:");
        granel.add(explic2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, 30));

        adv1.setForeground(new java.awt.Color(204, 0, 0));
        adv1.setText("Ingresar kg para calcular el precio");
        granel.add(adv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, 20));

        adv2.setForeground(new java.awt.Color(204, 0, 0));
        adv2.setText("Ingresar precio para calcular kg");
        granel.add(adv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, -1, -1));

        calcularGramosPesos.setBackground(new java.awt.Color(65, 220, 127));
        calcularGramosPesos.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        calcularGramosPesos.setForeground(new java.awt.Color(255, 255, 255));
        calcularGramosPesos.setText("Calcular");
        calcularGramosPesos.setFocusPainted(false);
        calcularGramosPesos.setFocusable(false);
        calcularGramosPesos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularGramosPesosActionPerformed(evt);
            }
        });
        granel.add(calcularGramosPesos, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, -1, -1));
        granel.add(mostrarPesos, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 180, 40));
        granel.add(mostrarKg, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 180, 40));

        jTabbedPane1.addTab("Granel", granel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(buscarProductoLabelVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buscarProductoLabelVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        String texto = buscarNombre.getText().trim().toLowerCase();
        mostrarOpcionesNormal.removeAllItems();
        resultadosNormales.clear();
        if (texto.length() < 3) return;

        List<Producto> productos = operacionesBD.obtenerTodosProductos(); // O usa tu m√©todo de b√∫squeda

        // Filtrar por coincidencias >=3 letras y prioridad por coincidencia en primeras posiciones
        productos.sort(Comparator.comparingInt(p -> coincidenciasInicio(texto, p.getDescription().toLowerCase())));
        List<Producto> filtrados = new ArrayList<>();
        for (Producto p : productos) {
            int match = coincidenciasInicio(texto, p.getDescription().toLowerCase());
            if (match >= 3) filtrados.add(p);
        }
        // Primero los de mayor coincidencia
        filtrados.sort((a, b) -> Integer.compare(
                coincidenciasInicio(buscarNombre.getText().trim().toLowerCase(), b.getDescription().toLowerCase()),
                coincidenciasInicio(buscarNombre.getText().trim().toLowerCase(), a.getDescription().toLowerCase())
        ));
        for (Producto p : filtrados) {
            mostrarOpcionesNormal.addItem(p.getDescription());
            resultadosNormales.add(p);
        }
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void buscarButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButton2ActionPerformed
        String texto = buscarNombre2.getText().trim().toLowerCase();
        mostrarOpcionesGranel.removeAllItems();
        resultadosGranel.clear();
        if (texto.length() < 3) return;

        List<ProductoGranel> productos = operacionesBD.obtenerTodosProductosGranel();

        productos.sort(Comparator.comparingInt(p -> coincidenciasInicio(texto, p.getDescriptionGranel().toLowerCase())));
        List<ProductoGranel> filtrados = new ArrayList<>();
        for (ProductoGranel p : productos) {
            int match = coincidenciasInicio(texto, p.getDescriptionGranel().toLowerCase());
            if (match >= 3) filtrados.add(p);
        }
        filtrados.sort((a, b) -> Integer.compare(
                coincidenciasInicio(buscarNombre2.getText().trim().toLowerCase(), b.getDescriptionGranel().toLowerCase()),
                coincidenciasInicio(buscarNombre2.getText().trim().toLowerCase(), a.getDescriptionGranel().toLowerCase())
        ));
        for (ProductoGranel p : filtrados) {
            mostrarOpcionesGranel.addItem(p.getDescriptionGranel());
            resultadosGranel.add(p);
        }
    }//GEN-LAST:event_buscarButton2ActionPerformed
    private int coincidenciasInicio(String texto, String nombre) {
        int count = 0;
        int len = Math.min(texto.length(), nombre.length());
        for (int i = 0; i < len; i++) {
            if (texto.charAt(i) == nombre.charAt(i)) count++;
            else break;
        }
        return count;
    }
    private void enviarOpcionVentas2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarOpcionVentas2ActionPerformed
        int idx = mostrarOpcionesGranel.getSelectedIndex();
        if (idx == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un producto a granel", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ProductoGranel prod = resultadosGranel.get(idx);

        float kg = 0;
        float precio = 0;
        try {
            String cantidadKgStr = cantidadEnKg.getText().trim();
            String cantidadPesosStr = cantidadEnPesos.getText().trim();
            if (!cantidadKgStr.isEmpty()) {
                kg = Float.parseFloat(cantidadKgStr);
                precio = kg * prod.getPrizeForKg();
            } else if (!cantidadPesosStr.isEmpty()) {
                precio = Float.parseFloat(cantidadPesosStr);
                kg = precio / prod.getPrizeForKg();
            } else {
                JOptionPane.showMessageDialog(this, "Ingresa kg o pesos", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Datos inv√°lidos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        parentLobby.agregarProductoGranelAVentaDesdeBuscar(prod, kg, precio);
        this.dispose();
    }//GEN-LAST:event_enviarOpcionVentas2ActionPerformed

    private void enviarOpcionVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarOpcionVentasActionPerformed
        int idx = mostrarOpcionesNormal.getSelectedIndex();
        if (idx == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un producto", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Producto prod = resultadosNormales.get(idx);
        int cantidad = 1;
        try {
            cantidad = Integer.parseInt(cantidadIng.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Cantidad inv√°lida", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Env√≠a los datos a la tablaVentas del lobby
        parentLobby.agregarProductoAVentaDesdeBuscar(prod, cantidad);
        this.dispose();
    }//GEN-LAST:event_enviarOpcionVentasActionPerformed

    private void calcularGramosPesosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularGramosPesosActionPerformed
        int idx = mostrarOpcionesGranel.getSelectedIndex();
        if (idx == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un producto a granel", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ProductoGranel prod = resultadosGranel.get(idx);

        String cantidadKgStr = cantidadEnKg.getText().trim();
        String cantidadPesosStr = cantidadEnPesos.getText().trim();

        if (!cantidadKgStr.isEmpty()) {
            try {
                float kg = Float.parseFloat(cantidadKgStr);
                float precio = kg * prod.getPrizeForKg();
                mostrarPesos.setText("Total: $" + String.format("%.2f", precio));
                mostrarKg.setText("");
            } catch (Exception ex) {
                mostrarPesos.setText("Error en kg");
            }
        } else if (!cantidadPesosStr.isEmpty()) {
            try {
                float pesos = Float.parseFloat(cantidadPesosStr);
                float kg = pesos / prod.getPrizeForKg();
                mostrarKg.setText("Total: " + String.format("%.3f", kg) + " kg");
                mostrarPesos.setText("");
            } catch (Exception ex) {
                mostrarKg.setText("Error en $");
            }
        }
    }//GEN-LAST:event_calcularGramosPesosActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adv1;
    private javax.swing.JLabel adv2;
    private javax.swing.JButton buscarButton;
    private javax.swing.JButton buscarButton2;
    private javax.swing.JTextField buscarNombre;
    private javax.swing.JTextField buscarNombre2;
    private javax.swing.JLabel buscarProductoLabelVenta;
    private javax.swing.JButton calcularGramosPesos;
    private javax.swing.JFormattedTextField cantidadEnKg;
    private javax.swing.JFormattedTextField cantidadEnPesos;
    private javax.swing.JFormattedTextField cantidadIng;
    private javax.swing.JButton enviarOpcionVentas;
    private javax.swing.JButton enviarOpcionVentas2;
    private javax.swing.JLabel explic1;
    private javax.swing.JLabel explic2;
    private javax.swing.JPanel granel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel mostrarKg;
    private javax.swing.JComboBox<String> mostrarOpcionesGranel;
    private javax.swing.JComboBox<String> mostrarOpcionesNormal;
    private javax.swing.JLabel mostrarPesos;
    private javax.swing.JPanel nombre;
    private javax.swing.JLabel nombreProducto1;
    private javax.swing.JLabel nombreProducto2;
    // End of variables declaration//GEN-END:variables
}
